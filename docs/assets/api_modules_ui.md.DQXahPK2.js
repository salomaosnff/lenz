import{_ as e,c as i,a0 as s,o as t}from"./chunks/framework.BeF2i_lt.js";const k=JSON.parse('{"title":"Módulo de UI","description":"","frontmatter":{},"headers":[],"relativePath":"api/modules/ui.md","filePath":"api/modules/ui.md"}'),n={name:"api/modules/ui.md"};function o(l,a,r,d,h,p){return t(),i("div",null,a[0]||(a[0]=[s('<h1 id="modulo-de-ui" tabindex="-1">Módulo de UI <a class="header-anchor" href="#modulo-de-ui" aria-label="Permalink to &quot;Módulo de UI&quot;">​</a></h1><p>O módulo ui é responsável por gerenciar janelas de interface do usuário independentes.</p><p>Para utilizar o módulo ui, basta importar o módulo <code>lenz:ui</code> no arquivo de script de sua extensão.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createWindow } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lenz:ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="metodos" tabindex="-1">Métodos <a class="header-anchor" href="#metodos" aria-label="Permalink to &quot;Métodos&quot;">​</a></h2><h3 id="createwindow-options-windowoptions-windowinstance" tabindex="-1"><code>createWindow(options: WindowOptions): WindowInstance</code> <a class="header-anchor" href="#createwindow-options-windowoptions-windowinstance" aria-label="Permalink to &quot;`createWindow(options: WindowOptions): WindowInstance`&quot;">​</a></h3><p>Cria uma janela de interface do usuário.</p><p>Exemplo:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createWindow } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lenz:ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> activate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> window</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Minha Janela&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    content: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`&lt;h1&gt;Olá, mundo!&lt;/h1&gt;`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>A propriadade <code>content</code> também aceita uma URL. Utilize <code>content: new URL(&#39;www/index.html&#39;, import.meta.url)</code> para carregar um arquivo HTML localizado em <code>www/index.html</code> que está no mesmo diretório do script da extensão.</p></div><h4 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td>options</td><td><a href="#windowoptions">WindowOptions</a></td><td>Opções da janela de interface do usuário.</td></tr></tbody></table><h4 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><a href="#windowinstance">WindowInstance</a> - Instância da janela de interface do usuário.</p><h3 id="getdata-any" tabindex="-1"><code>getData(): any</code> <a class="header-anchor" href="#getdata-any" aria-label="Permalink to &quot;`getData(): any`&quot;">​</a></h3><p>Retorna os dados passados para a janela de interface do usuário.</p><h4 id="retorno-1" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-1" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><code>any</code> - Dados passados para a janela de interface do usuário.</p><h3 id="createchannel-t-channel-t" tabindex="-1"><code>createChannel&lt;T&gt;(): Channel&lt;T&gt;</code> <a class="header-anchor" href="#createchannel-t-channel-t" aria-label="Permalink to &quot;`createChannel&lt;T&gt;(): Channel&lt;T&gt;`&quot;">​</a></h3><p>Cria um canal de comunicação entre a janela de interface do usuário e a extensão.</p><h4 id="exemplo" tabindex="-1">Exemplo <a class="header-anchor" href="#exemplo" aria-label="Permalink to &quot;Exemplo&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createChannel } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lenz:ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">receiver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createChannel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">receiver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mensagem recebida:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  sender.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ping&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="retorno-2" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-2" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><a href="#channel">Channel&lt;T&gt;</a> - Canal de comunicação entre a janela de interface do usuário e a extensão.</p><h3 id="createcustomref-t-factory-customreffactory-t-lenzref-t" tabindex="-1"><code>createCustomRef&lt;T&gt;(factory: CustomRefFactory&lt;T&gt;): LenzRef&lt;T&gt;</code> <a class="header-anchor" href="#createcustomref-t-factory-customreffactory-t-lenzref-t" aria-label="Permalink to &quot;`createCustomRef&lt;T&gt;(factory: CustomRefFactory&lt;T&gt;): LenzRef&lt;T&gt;`&quot;">​</a></h3><p>Cria uma referência reativa personalizada.</p><h4 id="exemplo-1" tabindex="-1">Exemplo <a class="header-anchor" href="#exemplo-1" aria-label="Permalink to &quot;Exemplo&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createCustomRef } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lenz:ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createCustomRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">??</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">newValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, newValue);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ref.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;valor alterado:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ref.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="parametros-1" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros-1" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td>factory</td><td><code>() =&gt; ({ get(): T, set(value: T): void })</code></td><td>Fábrica da referência reativa.</td></tr></tbody></table><h4 id="retorno-3" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-3" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><a href="#lenzref">LenzRef&lt;T&gt;</a> - Referência reativa personalizada.</p><h3 id="createref-t-initialvalue-t-lenzref-t" tabindex="-1"><code>createRef&lt;T&gt;(initialValue?: T): LenzRef&lt;T&gt;</code> <a class="header-anchor" href="#createref-t-initialvalue-t-lenzref-t" aria-label="Permalink to &quot;`createRef&lt;T&gt;(initialValue?: T): LenzRef&lt;T&gt;`&quot;">​</a></h3><p>Cria uma referência reativa para um valor.</p><h4 id="exemplo-2" tabindex="-1">Exemplo <a class="header-anchor" href="#exemplo-2" aria-label="Permalink to &quot;Exemplo&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createRef } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lenz:ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createRef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ref.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;valor alterado:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ref.value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="parametros-2" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros-2" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td>initialValue</td><td><code>T | undefined</code></td><td>Valor inicial da ref.</td></tr></tbody></table><h4 id="retorno-4" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-4" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><a href="#lenzref">LenzRef&lt;T&gt;</a> - Referência reativa com o valor inicial informado. <a href="#lenzref">LenzRef&lt;T | undefined&gt;</a> - Referência reativa com valor inicial <code>undefined</code>.</p><h3 id="onuiinit-callback-function-void" tabindex="-1"><code>onUiInit(callback: Function): void</code> <a class="header-anchor" href="#onuiinit-callback-function-void" aria-label="Permalink to &quot;`onUiInit(callback: Function): void`&quot;">​</a></h3><p>Registra um callback para ser executado quando a janela de interface do usuário for inicializada.</p><p>Deve ser chamada dentro da janela de interface do usuário para garantir que a inicialização seja feita corretamente.</p><h4 id="exemplo-3" tabindex="-1">Exemplo <a class="header-anchor" href="#exemplo-3" aria-label="Permalink to &quot;Exemplo&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { onUiInit } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lenz:ui&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { createApp } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onUiInit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    template: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`&lt;h1&gt;Olá, mundo!&lt;/h1&gt;`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#app&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="parametros-3" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros-3" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td>callback</td><td><code>Function</code></td><td>Função a ser executada.</td></tr></tbody></table><h2 id="tipos" tabindex="-1">Tipos <a class="header-anchor" href="#tipos" aria-label="Permalink to &quot;Tipos&quot;">​</a></h2><h3 id="windowoptions" tabindex="-1"><code>WindowOptions</code> <a class="header-anchor" href="#windowoptions" aria-label="Permalink to &quot;`WindowOptions`&quot;">​</a></h3><p>Opções da janela de interface do usuário.</p><h4 id="propriedades" tabindex="-1">Propriedades <a class="header-anchor" href="#propriedades" aria-label="Permalink to &quot;Propriedades&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>title</code></td><td><code>string | undefined</code></td><td>Título da janela.</td></tr><tr><td><code>content</code></td><td><code>string | URL</code></td><td>Conteúdo da janela.</td></tr><tr><td><code>base</code></td><td>URL</td><td>URL base para carregar recursos da janela.</td></tr><tr><td><code>width</code></td><td><code>number</code></td><td>Largura da janela.</td></tr><tr><td><code>height</code></td><td><code>number</code></td><td>Altura da janela.</td></tr><tr><td><code>themed</code></td><td><code>boolean</code></td><td>Injeta estilos do tema do editor</td></tr><tr><td><code>data</code></td><td><code>any</code></td><td>Dados a serem passados para a janela.</td></tr><tr><td><code>position</code></td><td><code>{x: number, y: number}</code></td><td>Posição da janela.</td></tr><tr><td><code>resizable</code></td><td><code>boolean</code></td><td>Define se a janela é redimensionável.</td></tr><tr><td><code>frame</code></td><td><code>boolean</code></td><td>Define a visibilidade da moldura da janela.</td></tr><tr><td><code>modal</code></td><td><code>boolean</code></td><td>Define se a janela é modal.</td></tr><tr><td><code>closable</code></td><td><code>boolean</code></td><td>Define se a janela é fechável.</td></tr><tr><td><code>movable</code></td><td><code>boolean</code></td><td>Define se a janela é movível.</td></tr></tbody></table><h3 id="windowinstance" tabindex="-1"><code>WindowInstance</code> <a class="header-anchor" href="#windowinstance" aria-label="Permalink to &quot;`WindowInstance`&quot;">​</a></h3><p>Instância da janela de interface do usuário.</p><h4 id="propriedades-1" tabindex="-1">Propriedades <a class="header-anchor" href="#propriedades-1" aria-label="Permalink to &quot;Propriedades&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>options</code></td><td><code>WindowOptions</code></td><td>Opções da janela.</td></tr></tbody></table><h4 id="metodos-1" tabindex="-1">Métodos <a class="header-anchor" href="#metodos-1" aria-label="Permalink to &quot;Métodos&quot;">​</a></h4><h5 id="close-void" tabindex="-1"><code>close(): void</code> <a class="header-anchor" href="#close-void" aria-label="Permalink to &quot;`close(): void`&quot;">​</a></h5><p>Fecha a janela de interface do usuário.</p><h5 id="focus-void" tabindex="-1"><code>focus(): void</code> <a class="header-anchor" href="#focus-void" aria-label="Permalink to &quot;`focus(): void`&quot;">​</a></h5><p>Foca a janela de interface do usuário.</p><h5 id="waitforclose-promise-void" tabindex="-1"><code>waitForClose(): Promise&lt;void&gt;</code> <a class="header-anchor" href="#waitforclose-promise-void" aria-label="Permalink to &quot;`waitForClose(): Promise&lt;void&gt;`&quot;">​</a></h5><p>Aguarda a janela de interface do usuário ser fechada.</p><h3 id="channel" tabindex="-1"><code>Channel&lt;T&gt;</code># <a class="header-anchor" href="#channel" aria-label="Permalink to &quot;`Channel&lt;T&gt;`#{#channel}&quot;">​</a></h3><p>Tupla de canais de comunicação.</p><table tabindex="0"><thead><tr><th>Posição</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>0</code></td><td><a href="#senderchannel">SenderChannel&lt;T&gt;</a></td><td>Canal de envio.</td></tr><tr><td><code>1</code></td><td><a href="#receiverchannel">ReceiverChannel&lt;T&gt;</a></td><td>Canal de recebimento.</td></tr></tbody></table><h3 id="senderchannel" tabindex="-1"><code>SenderChannel&lt;T&gt;</code># <a class="header-anchor" href="#senderchannel" aria-label="Permalink to &quot;`SenderChannel&lt;T&gt;`#{#senderchannel}&quot;">​</a></h3><p>Canal para enviar mensagens.</p><h4 id="metodos-2" tabindex="-1">Métodos <a class="header-anchor" href="#metodos-2" aria-label="Permalink to &quot;Métodos&quot;">​</a></h4><h5 id="send-data-t-void" tabindex="-1"><code>send(data: T): void</code> <a class="header-anchor" href="#send-data-t-void" aria-label="Permalink to &quot;`send(data: T): void`&quot;">​</a></h5><p>Envia uma mensagem para o <a href="#receiverchannel">ReceiverChannel&lt;T&gt;</a> associado.</p><h4 id="parametros-4" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros-4" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>data</code></td><td><code>T</code></td><td>Mensagem.</td></tr></tbody></table><h5 id="close-void-1" tabindex="-1"><code>close(): void</code> <a class="header-anchor" href="#close-void-1" aria-label="Permalink to &quot;`close(): void`&quot;">​</a></h5><p>Fecha o canal de envio e o canal de recebimento associado.</p><h5 id="isclosed-boolean" tabindex="-1"><code>isClosed(): boolean</code> <a class="header-anchor" href="#isclosed-boolean" aria-label="Permalink to &quot;`isClosed(): boolean`&quot;">​</a></h5><p>Verifica se o canal de envio está fechado.</p><h5 id="waitclose-promise-void" tabindex="-1"><code>waitClose(): Promise&lt;void&gt;</code> <a class="header-anchor" href="#waitclose-promise-void" aria-label="Permalink to &quot;`waitClose(): Promise&lt;void&gt;`&quot;">​</a></h5><p>Aguarda o canal ser fechado.</p><h3 id="receiverchannel" tabindex="-1"><code>ReceiverChannel&lt;T&gt;</code># <a class="header-anchor" href="#receiverchannel" aria-label="Permalink to &quot;`ReceiverChannel&lt;T&gt;`#{#receiverchannel}&quot;">​</a></h3><p>Canal para receber mensagens.</p><h4 id="metodos-3" tabindex="-1">Métodos <a class="header-anchor" href="#metodos-3" aria-label="Permalink to &quot;Métodos&quot;">​</a></h4><h5 id="addlistener-listener-data-t-void-void" tabindex="-1"><code>addListener(listener: (data: T) =&gt; void): void</code> <a class="header-anchor" href="#addlistener-listener-data-t-void-void" aria-label="Permalink to &quot;`addListener(listener: (data: T) =&gt; void): void`&quot;">​</a></h5><p>Adiciona um ouvinte para receber mensagens.</p><h4 id="parametros-5" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros-5" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>listener</code></td><td><code>(data: T) =&gt; void</code></td><td>Ouvinte de mensagens.</td></tr></tbody></table><h4 id="retorno-5" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-5" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><code>LenzDisposer</code> - Disposer para remover o ouvinte.</p><h5 id="close-void-2" tabindex="-1"><code>close(): void</code> <a class="header-anchor" href="#close-void-2" aria-label="Permalink to &quot;`close(): void`&quot;">​</a></h5><p>Fecha o canal de recebimento e o canal de envio associado.</p><h5 id="isclosed-boolean-1" tabindex="-1"><code>isClosed(): boolean</code> <a class="header-anchor" href="#isclosed-boolean-1" aria-label="Permalink to &quot;`isClosed(): boolean`&quot;">​</a></h5><p>Verifica se o canal de recebimento está fechado.</p><h5 id="waitclose-promise-void-1" tabindex="-1"><code>waitClose(): Promise&lt;void&gt;</code> <a class="header-anchor" href="#waitclose-promise-void-1" aria-label="Permalink to &quot;`waitClose(): Promise&lt;void&gt;`&quot;">​</a></h5><p>Aguarda o canal ser fechado.</p><h5 id="next-signal-abortsignal-promise-t" tabindex="-1"><code>next(signal?: AbortSignal): Promise&lt;T&gt;</code> <a class="header-anchor" href="#next-signal-abortsignal-promise-t" aria-label="Permalink to &quot;`next(signal?: AbortSignal): Promise&lt;T&gt;`&quot;">​</a></h5><p>Aguarda a próxima mensagem.</p><h4 id="parametros-6" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros-6" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>signal</code></td><td><code>AbortSignal | undefined</code></td><td>Sinal de cancelamento.</td></tr></tbody></table><h4 id="retorno-6" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-6" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><code>Promise&lt;T&gt;</code> - Promessa que será resolvida com a próxima mensagem.</p><h3 id="lenzref" tabindex="-1"><code>LenzRef&lt;T&gt;</code># <a class="header-anchor" href="#lenzref" aria-label="Permalink to &quot;`LenzRef&lt;T&gt;`#{#lenzref}&quot;">​</a></h3><p>Referência reativa.</p><h4 id="propriedades-2" tabindex="-1">Propriedades <a class="header-anchor" href="#propriedades-2" aria-label="Permalink to &quot;Propriedades&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>value</code></td><td><code>T</code></td><td>Valor atual da referência.</td></tr></tbody></table><h4 id="metodos-4" tabindex="-1">Métodos <a class="header-anchor" href="#metodos-4" aria-label="Permalink to &quot;Métodos&quot;">​</a></h4><h5 id="waitclose-promise-void-2" tabindex="-1"><code>waitClose(): Promise&lt;void&gt;</code> <a class="header-anchor" href="#waitclose-promise-void-2" aria-label="Permalink to &quot;`waitClose(): Promise&lt;void&gt;`&quot;">​</a></h5><p>Aguarda a referência ser fechada.</p><h5 id="addlistener-listener-value-t-void-lenzdisposer" tabindex="-1"><code>addListener(listener: (value: T) =&gt; void): LenzDisposer</code> <a class="header-anchor" href="#addlistener-listener-value-t-void-lenzdisposer" aria-label="Permalink to &quot;`addListener(listener: (value: T) =&gt; void): LenzDisposer`&quot;">​</a></h5><p>Adiciona um ouvinte para receber notificações de alteração de valor.</p><h4 id="parametros-7" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros-7" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>listener</code></td><td><code>(value: T) =&gt; void</code></td><td>Ouvinte de alterações.</td></tr></tbody></table><h4 id="retorno-7" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-7" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><code>LenzDisposer</code> - Disposer para remover o ouvinte.</p><h5 id="next-signal-abortsignal-promise-t-1" tabindex="-1"><code>next(signal?: AbortSignal): Promise&lt;T&gt;</code> <a class="header-anchor" href="#next-signal-abortsignal-promise-t-1" aria-label="Permalink to &quot;`next(signal?: AbortSignal): Promise&lt;T&gt;`&quot;">​</a></h5><p>Aguarda a próxima alteração de valor.</p><h4 id="parametros-8" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros-8" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>signal</code></td><td><code>AbortSignal | undefined</code></td><td>Sinal de cancelamento.</td></tr></tbody></table><h4 id="retorno-8" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-8" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><code>Promise&lt;T&gt;</code> - Promessa que será resolvida com o próximo valor.</p><h5 id="listen-signal-abortsignal-asynciterableiterator-t" tabindex="-1"><code>listen(signal?: AbortSignal): AsyncIterableIterator&lt;T&gt;</code> <a class="header-anchor" href="#listen-signal-abortsignal-asynciterableiterator-t" aria-label="Permalink to &quot;`listen(signal?: AbortSignal): AsyncIterableIterator&lt;T&gt;`&quot;">​</a></h5><p>Retorna um iterador assíncrono para ouvir alterações de valor.</p><h4 id="parametros-9" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros-9" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>signal</code></td><td><code>AbortSignal | undefined</code></td><td>Sinal de cancelamento.</td></tr></tbody></table><h4 id="retorno-9" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-9" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><code>AsyncIterableIterator&lt;T&gt;</code> - Iterador assíncrono para ouvir alterações de valor.</p><h4 id="clone-lenzref" tabindex="-1"><code>clone(): LenzRef</code> <a class="header-anchor" href="#clone-lenzref" aria-label="Permalink to &quot;`clone(): LenzRef`&quot;">​</a></h4><p>Clona a referência reativa.</p><h4 id="retorno-10" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-10" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><a href="#lenzref">LenzRef&lt;T&gt;</a> - Referência reativa clonada.</p><h4 id="destroy-void" tabindex="-1"><code>destroy(): void</code> <a class="header-anchor" href="#destroy-void" aria-label="Permalink to &quot;`destroy(): void`&quot;">​</a></h4><p>Fecha a referência reativa.</p>',131)]))}const E=e(n,[["render",o]]);export{k as __pageData,E as default};
