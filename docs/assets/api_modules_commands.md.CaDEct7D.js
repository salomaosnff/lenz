import{_ as t,c as o,a0 as d,o as a}from"./chunks/framework.BeF2i_lt.js";const p=JSON.parse('{"title":"Módulo de comandos","description":"","frontmatter":{},"headers":[],"relativePath":"api/modules/commands.md","filePath":"api/modules/commands.md"}'),r={name:"api/modules/commands.md"};function i(s,e,n,c,m,l){return a(),o("div",null,e[0]||(e[0]=[d('<h1 id="modulo-de-comandos" tabindex="-1">Módulo de comandos <a class="header-anchor" href="#modulo-de-comandos" aria-label="Permalink to &quot;Módulo de comandos&quot;">​</a></h1><p>O módulo de comandos é responsável por gerenciar os comandos disponíveis no Lenz Designer.</p><p>Para utilizar o módulo de comandos, basta importar o módulo <code>lenz:commands</code> no arquivo de script de sua extensão.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { addCommand } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lenz:commands&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="metodos" tabindex="-1">Métodos <a class="header-anchor" href="#metodos" aria-label="Permalink to &quot;Métodos&quot;">​</a></h2><h3 id="addcommand-command-command-lenzdisposer" tabindex="-1"><code>addCommand(command: Command): LenzDisposer</code> <a class="header-anchor" href="#addcommand-command-command-lenzdisposer" aria-label="Permalink to &quot;`addCommand(command: Command): LenzDisposer`&quot;">​</a></h3><p>Adiciona um comando ao Editor.</p><h4 id="parametros" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td>command</td><td><a href="#command">Command</a></td><td>Comando a ser adicionado.</td></tr></tbody></table><h4 id="retorno" tabindex="-1">Retorno <a class="header-anchor" href="#retorno" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><code>LenzDisposer</code> - Disposer para remover o comando que deve ser adicionado em <code>context.subscriptions</code> da extensão.</p><h3 id="executecommand-t-commandid-string-args-any-promise-t" tabindex="-1"><code>executeCommand&lt;T&gt;(commandId: string, ...args: any[]): Promise&lt;T&gt;</code> <a class="header-anchor" href="#executecommand-t-commandid-string-args-any-promise-t" aria-label="Permalink to &quot;`executeCommand&lt;T&gt;(commandId: string, ...args: any[]): Promise&lt;T&gt;`&quot;">​</a></h3><p>Executa um comando no Editor.</p><h4 id="parametros-1" tabindex="-1">Parâmetros <a class="header-anchor" href="#parametros-1" aria-label="Permalink to &quot;Parâmetros&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td>commandId</td><td><code>string</code></td><td>ID do comando a ser executado.</td></tr><tr><td>...args</td><td><code>any[]</code></td><td>Argumentos do comando.</td></tr></tbody></table><h4 id="retorno-1" tabindex="-1">Retorno <a class="header-anchor" href="#retorno-1" aria-label="Permalink to &quot;Retorno&quot;">​</a></h4><p><code>Promise&lt;T&gt;</code> - Promessa que será resolvida com o resultado da execução do comando.</p><h2 id="tipos" tabindex="-1">Tipos <a class="header-anchor" href="#tipos" aria-label="Permalink to &quot;Tipos&quot;">​</a></h2><h3 id="commandcontext" tabindex="-1"><code>CommandContext</code> <a class="header-anchor" href="#commandcontext" aria-label="Permalink to &quot;`CommandContext`&quot;">​</a></h3><p>Contexto de execução de um comando.</p><h4 id="propriedades" tabindex="-1">Propriedades <a class="header-anchor" href="#propriedades" aria-label="Permalink to &quot;Propriedades&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>getSelection</code></td><td><code>Set&lt;Selection&gt;</code></td><td>Retorna a seleção atual do editor.</td></tr><tr><td><code>setSelection</code></td><td><code>(selection: HTMLElement[]) =&gt; void</code></td><td>Define a seleção atual do editor.</td></tr><tr><td><code>getCurrentContent</code></td><td><code>() =&gt; string</code></td><td>Retorna uma string contendo o HTML do documento atual.</td></tr><tr><td><code>getCurrentDocument</code></td><td><code>() =&gt; Document</code></td><td>Retorna o documento atual.</td></tr></tbody></table><h3 id="command" tabindex="-1"><code>Command</code> <a class="header-anchor" href="#command" aria-label="Permalink to &quot;`Command`&quot;">​</a></h3><p>Comando a ser adicionado ao Editor.</p><h4 id="propriedades-1" tabindex="-1">Propriedades <a class="header-anchor" href="#propriedades-1" aria-label="Permalink to &quot;Propriedades&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>id</code></td><td><code>string</code></td><td>Identificador único do comando.</td></tr><tr><td><code>name</code></td><td><code>string | undefined</code></td><td>Nome que será exibido na paleta de comandos.</td></tr><tr><td><code>description</code></td><td><code>string | undefined</code></td><td>Descrição que será exibida na paleta de comandos.</td></tr><tr><td><code>icon</code></td><td><code>string | undefined</code></td><td>Ícone que será exibido na paleta de comandos.</td></tr><tr><td><code>run</code></td><td><code>(context: CommandContext) =&gt; void</code></td><td>Função que será executada ao chamar o comando.</td></tr></tbody></table><div class="info custom-block"><p class="custom-block-title">INFO</p><p>O Ícone deve ser uma string contendo um Path SVG de tamanho 24x24. Por exemplo: <code>M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z</code></p></div><h3 id="selection" tabindex="-1"><code>Selection</code> <a class="header-anchor" href="#selection" aria-label="Permalink to &quot;`Selection`&quot;">​</a></h3><p>Representa uma seleção de elementos no editor.</p><h4 id="propriedades-2" tabindex="-1">Propriedades <a class="header-anchor" href="#propriedades-2" aria-label="Permalink to &quot;Propriedades&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Nome</th><th>Tipo</th><th>Descrição</th></tr></thead><tbody><tr><td><code>element</code></td><td><code>HTMLElement</code></td><td>Elemento selecionado.</td></tr><tr><td><code>box</code></td><td><code>DOMRect</code></td><td>Caixa de seleção.</td></tr><tr><td><code>selector</code></td><td><code>string</code></td><td>Seletor CSS do elemento.</td></tr></tbody></table><h3 id="lenzdisposer" tabindex="-1"><code>LenzDisposer</code> <a class="header-anchor" href="#lenzdisposer" aria-label="Permalink to &quot;`LenzDisposer`&quot;">​</a></h3><p>Disposer para remover um comando.</p><h4 id="definicao" tabindex="-1">Definição <a class="header-anchor" href="#definicao" aria-label="Permalink to &quot;Definição&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LenzDisposer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>',35)]))}const u=t(r,[["render",i]]);export{p as __pageData,u as default};
