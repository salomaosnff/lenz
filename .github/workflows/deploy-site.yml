name: Deploy Website
description: Deploys the website to GitHub Pages when the build is successful.
on:
  workflow_run: 
    workflows: ["Build and Release"]
    types:
      - completed
  workflow_dispatch:
    
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: Install Flatpak
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak flatpak-builder
          flatpak --user remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak --user install -y flathub org.freedesktop.Platform//24.08 org.freedesktop.Sdk//24.08 org.freedesktop.Sdk.Extension.rust-stable//24.08 org.freedesktop.Sdk.Extension.node22//24.08
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build docs
        run: pnpm build:docs

      - name: Build Flatpak repo
        run: |
          mkdir -p dist/target
          flatpak-builder --gpg-sign="contato@sallon.dev" --repo=repo --force-clean build-dir dev.sallon.lenz.flatpak.yaml
          flatpak build-bundle --gpg-sign="contato@sallon.dev" repo dist/target/dev.sallon.lenz.flatpak dev.sallon.lenz
          mv repo docs/flatpak

      # Assinar o repositório Flatpak
      - name: Sign Flatpak repository
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PASSPHRASE" | gpg --batch --yes --passphrase-fd 0 --pinentry-mode loopback --sign
          flatpak build-update-repo --gpg-sign="contato@sallon.dev" docs/flatpak
          flatpak build-sign docs/flatpak --gpg-sign="contato@sallon.dev"

      - name: "Create FlatpakRepo"
        env:
          GPG_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        run: |
          cat <<EOF > docs/lenz.flatpakrepo
          [Flatpak Repo]
          Title=Lenz Designer
          Url=https://sallon.dev/lenz/flatpak
          Homepage=https://sallon.dev/lenz
          Comment=Repositório de atualizações do Lenz Designer
          Description=Repositório de atualizações do Lenz Designer
          Icon=https://sallon.dev/lenz/logo.png
          GPGKey=$GPG_KEY
          EOF
          echo $GPG_KEY | base64 -d > docs/lenz.gpg

      - name: "Create FlatpakRef"
        env:
          GPG_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
        run: |
          cat <<EOF > docs/lenz.flatpakref
          [Flatpak Ref]
          Title=Lenz Designer
          Name=dev.sallon.lenz
          Branch=master
          Runtime=org.freedesktop.Platform//24.08
          Url=https://sallon.dev/lenz/flatpak
          Arch=x86_64
          Comment=Um editor de páginas HTML para todos
          Icon=dev.sallon.lenz
          License=GPL-3.0-or-later
          GPGKey=$GPG_KEY
          EOF

      - name: Upload docs to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4